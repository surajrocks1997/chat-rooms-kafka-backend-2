spring:
  cloud:
    function:
      definition: producer;consumer;aggregate
    stream:
      kafka:
        streams:
          bindings:
            consumer-in-0:
              consumer:
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: com.example.chatroomskafkabackend2.converter.ChatMessageSerDes

            aggregate-in-0:
              consumer:
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: com.example.chatroomskafkabackend2.converter.ChatMessageSerDes

          binder:
            configuration:
              commit.interval.ms: 2000
        binder:
          brokers:
            - localhost:9092
        bindings:
          producer-out-0:
            producer:
              configuration:
                key.serializer: org.apache.kafka.common.serialization.StringSerializer

          consumer-in-0:
            consumer:
              configuration:
                group-id: my-consumer-group
                value:
                  deserializer: com.example.chatroomskafkabackend2.converter.ChatMessageSerDes

          aggregate-in-0:
            consumer:
              configuration:
                group-id: my-consumer-group
                value:
                  deserializer: com.example.chatroomskafkabackend2.converter.ChatMessageSerDes

      bindings:
        producer-out-0:
          destination: chat-room-topic
        consumer-in-0:
          destination: chat-room-topic
        aggregate-in-0:
          destination: chat-room-topic